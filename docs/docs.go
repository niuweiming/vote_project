// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "2695062156@qq.com"
        },
        "license": {
            "name": "Apache 2.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "显示投票页面",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vote"
                ],
                "summary": "显示投票页面",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tools.ECode"
                        }
                    }
                }
            }
        },
        "/captcha": {
            "get": {
                "description": "获取验证码",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login"
                ],
                "summary": "获取验证码",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tools.ECode"
                        }
                    }
                }
            }
        },
        "/delVote": {
            "delete": {
                "description": "根据投票ID删除投票主题和选项",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vote"
                ],
                "summary": "删除投票",
                "parameters": [
                    {
                        "type": "string",
                        "description": "投票ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tools.ECode"
                        }
                    },
                    "404": {
                        "description": "未找到对应投票",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "执行用户登录操作",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login"
                ],
                "summary": "执行用户登录",
                "parameters": [
                    {
                        "description": "用户名",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "密码",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "验证码ID",
                        "name": "captcha_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "验证码值",
                        "name": "captcha_value",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功响应",
                        "schema": {
                            "$ref": "#/definitions/tools.ECode"
                        }
                    },
                    "400": {
                        "description": "请求失败",
                        "schema": {
                            "$ref": "#/definitions/tools.ECode"
                        }
                    },
                    "401": {
                        "description": "未认证",
                        "schema": {
                            "$ref": "#/definitions/tools.ECode"
                        }
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "description": "执行用户退出",
                "tags": [
                    "login"
                ],
                "summary": "执行用户退出",
                "responses": {
                    "302": {
                        "description": "Found"
                    }
                }
            },
            "post": {
                "description": "创建一个新用户",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login"
                ],
                "summary": "创建一个新用户",
                "parameters": [
                    {
                        "description": "用户名",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "密码",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "确认密码",
                        "name": "password2",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tools.ECode"
                        }
                    }
                }
            }
        },
        "/resultInfo": {
            "get": {
                "description": "获取展示投票结果的页面",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "vote"
                ],
                "summary": "获取投票结果页面",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/resultVote": {
            "get": {
                "description": "根据投票ID获取投票结果数据",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vote"
                ],
                "summary": "获取投票结果",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "投票ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tools.ECode"
                        }
                    }
                }
            }
        },
        "/updateVote": {
            "post": {
                "description": "更新已有投票主题和选项",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vote"
                ],
                "summary": "更新投票",
                "parameters": [
                    {
                        "description": "投票标题",
                        "name": "title",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "投票选项名称",
                        "name": "optStr",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tools.ECode"
                        }
                    }
                }
            }
        },
        "/vote": {
            "get": {
                "description": "获取特定投票信息",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vote"
                ],
                "summary": "获取特定投票信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tools.ECode"
                        }
                    }
                }
            }
        },
        "/votes": {
            "get": {
                "description": "获取所有投票信息",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vote"
                ],
                "summary": "获取所有投票信息",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tools.ECode"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "tools.ECode": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "vote",
	Description:      "This is a sample server vote server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
